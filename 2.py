# ---------------------------- # 1 # ---------------------------- #

# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе..

a = [1, 1.2, 'ded', None, False, ('tuple'), {'множество'}, dict(Cловарь = 'слово'), bytes([1, 2, 3]), ['список', 'в', 'списке']]
for i in a:
    print(i, type(i))

# ---------------------------- # 2 # ---------------------------- #

# 2. Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

a = []
s = ''
while s != 'exit':
    s = input('Enter any elements: ')
    if s != 'exit':
        a.append(s)
    print('current list = ', a, ' to exit press "exit"')

print('input end, list = ', a)
print(len(a))

i = 0
while i < len(a):
    if i + 1 != len(a):
        tmp = a.pop(i)
        a.insert(i + 1, tmp)
    i = i + 2

print('new list = ', a)

# ---------------------------- # 3 # ---------------------------- #

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.

number_month = input('Enter the month number from 1 to 12 to determine the time of year: ')

seasons = {
    'Summer': ['6', '7', '8'],
    'Autumn': ['9', '10', '11'],
    'Spring': ['3', '4', '5'],
    'Winter': ['1', '2', '12']
}
fl = False
for key, values in seasons.items():
    for val in values:
        if number_month == val:
            print(key)
            fl = True

if fl == False:
    print('Ничего на найдено')
# print(seasons.values(number_month))


months=['winter', 'spring', 'summer', 'autumn']

if number_month in ['1', '2', '12']:
    print(months[0])
elif number_month in ['3', '4', '5']:
    print(months[1])
elif number_month in ['6', '7', '8']:
    print(months[2])
elif number_month in ['9', '10', '11']:
    print(months[3])
else:
    print('Ничего на найдено')

# ---------------------------- # 4 # ---------------------------- #

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если слово длинное, выводить только первые 10 букв в слове.

a = str(input('Please write a few words separated by spaces: '))

b = a.split(' ')

for num, item in enumerate(b, 1):
    if len(item) > 10:
        print(f'{num}-ое слово {item[0:10]}...')
    else:
        print(f'{num}-ое слово {item}')


# ---------------------------- # 5 # ---------------------------- #

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением
# должен разместиться после них.
# Подсказка.
# Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например,
# my_list = [7, 5, 3, 3, 2].

rating = []
number = ''
while number != 'end':
    number = input('Enter new rating, please: ')
    if number != 'end':
        if len(rating) > 0:
            i = 0
            min = 0
            while i < len(rating):
                if int(rating[i]) > int(number):
                    min = i + 1
                    number = int(number)
                elif int(rating[i]) == int(number):
                        min = i + 1
                        number = float(number)
                else:
                    number = int(number)
                    if min > 0:
                        break
                i += 1
            rating.insert(min, number)
        else:
            rating.append(int(number))
print('finish list ', rating)

# ---------------------------- # 6 # ---------------------------- #

# 6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }
# --------------------------------------- Список товаров --------------------------------------- #
#
# goods = []
# good = {
#     'название': '',
#     'цена': '',
#     'количество': '',
#     'eд': '',
# }
#
# b = ''
# i=0
# while b != 'e':
#     g = good.copy()
#     b = input('Добавить товар или e для выхода ')
#     if b != 'e':
#         i+=1
#         for key in g:
#             g[key] = input(f'Введите {key}: ')
#         t = (i, g)
#         goods.append(t)
#     else:
#         print('Ввод окончен')
#
# for val in goods:
#     print(val)


# for value in goods:
#     if value == 'стоп':
#         print('Конец списка')

# --------------------------------------- Аналитика --------------------------------------- #

l = []
a = {
    'Названия товаров': [],
    'Стоимость товаров': [],
    'Количесво товаров': [],
    'Еденицы измерения': []
}
i = 1
b = ''
while b != 'end':
    t = ()
    goods = {}
    b = input('Нажмите Enter для ввода или "end" для выхода?')
    if b != 'end':
        goods['Название'] = input('Название товара: ')
        a['Названия товаров'].append(goods['Название'])
        goods['Цена'] = input('Стоимость товара: ')
        a['Стоимость товаров'].append(goods['Цена'])
        goods['Количество'] = input('Сколько: ')
        a['Количесво товаров'].append(goods['Количество'])
        goods['еденицы измерения'] = input('В чём измеряется: ')
        a['Еденицы измерения'].append(goods['еденицы измерения'])
        t = (i, goods)
        i += 1
        l.append(t)

for value in l:
    print(value)

for key, value in a.items():
    print(f'{key}: {value}')


